name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # Required for OIDC authentication
      contents: read    # Required to checkout code

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Pulumi CLI
        uses: pulumi/actions@v5

      - name: Login to S3 backend
        run: pulumi login s3://nodm-name-pulumi-state
        working-directory: ./iac
        env:
          PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}

      - name: Select or create stack
        run: pulumi stack select prod --create
        working-directory: ./iac
        env:
          PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}

      - name: Clear pending operations and cleanup state
        run: |
          # Export stack to get current state
          pulumi stack export > stack-state.json
          # Remove pending operations from state
          jq 'del(.deployment.pending_operations)' stack-state.json > stack-state-clean.json
          # Import cleaned state back
          pulumi stack import --file stack-state-clean.json
          # Refresh to sync with AWS (this will detect orphaned resources)
          pulumi refresh --yes --skip-preview || true
        working-directory: ./iac
        env:
          PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
        continue-on-error: true

      - name: Deploy with Pulumi
        run: pulumi up --yes
        working-directory: ./iac
        env:
          PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
        continue-on-error: false
